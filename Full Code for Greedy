def greedy_vertex_cover(graph):
    visited = set()
    cover = set()
    edges = {(u, v) for u in graph for v in graph[u] if (v, u) not in visited}

    while edges:
        u, v = edges.pop()
        cover.add(u)
        cover.add(v)
        # Remove all edges incident to u or v
        edges = {e for e in edges if u not in e and v not in e}
    return cover

# Example usage
if __name__ == "__main__":
    G = {
        0: [1, 2],
        1: [0, 2],
        2: [0, 1, 3],
        3: [2]
    }
    result = greedy_vertex_cover(G)
    print("Vertex Cover:", result)
